// Generated by https://quicktype.io
//
// To change quicktype's target language, run command:
//
//   "Set quicktype target language"

export interface Resopnse {
  data: Data;
  status: number;
  statusText: string;
  headers: ResopnseHeaders;
  config: Config;
  request: Request;
}

export interface Config {
  url: string;
  method: string;
  headers: ConfigHeaders;
  params: Params;
  transformRequest: null[];
  transformResponse: null[];
  timeout: number;
  xsrfCookieName: string;
  xsrfHeaderName: string;
  maxContentLength: number;
  maxBodyLength: number;
}

export interface ConfigHeaders {
  Accept: string;
}

export interface Params {
  clientId: number;
  key: string;
}

export interface Data {
  items: Item[];
  has_more: boolean;
  quota_max: number;
  quota_remaining: number;
}

export interface Item {
  tags: string[];
  owner: Owner;
  is_answered: boolean;
  view_count: number;
  answer_count: number;
  score: number;
  last_activity_date: number;
  creation_date: number;
  question_id: number;
  content_license: ContentLicense;
  link: string;
  title: string;
  last_edit_date?: number;
  accepted_answer_id?: number;
  body?: string;
}

export enum ContentLicense {
  CcBySa30 = "CC BY-SA 3.0",
  CcBySa40 = "CC BY-SA 4.0",
}

export interface Owner {
  reputation: number;
  user_id: number;
  user_type: UserType;
  accept_rate?: number;
  profile_image: string;
  display_name: string;
  link: string;
}

export enum UserType {
  Registered = "registered",
}

export interface ResopnseHeaders {
  "cache-control": string;
  "content-length": string;
  "content-type": string;
}

export interface Request {}
